name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17 and Gradle 8.5
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Build and Test Frontend
        working-directory: frontend
        run: |
          npm install
          npm test
    
      - name: Build Frontend Docker Image
        working-directory: frontend
        run: docker build -t registry.heroku.com/cribhub-frontend-test/web .

      - name: Build and Test Backend
        working-directory: backend
        run: |
          ./gradlew build

      - name: Build Backend Docker Image
        working-directory: backend
        run: docker build -t registry.heroku.com/cribhub-backend-test/web .

      - name: Deploy Backend to Heroku Test Environment
        if: success()
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          docker push registry.heroku.com/cribhub-backend-test/web
          heroku container:release web --app cribhub-backend-test

      - name: Deploy Frontend to Heroku Test Environment
        if: success()
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          docker push registry.heroku.com/cribhub-frontend-test/web
          heroku container:release web --app cribhub-frontend-test

  deploy-to-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Build Docker Image for Backend
      - name: Build Backend Docker Image for Production
        working-directory: backend
        run: docker build -t registry.heroku.com/cribhub-backend-prod/web .

      # Deploy Backend to Heroku Production Environment
      - name: Deploy Backend to Heroku Production Environment
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          docker push registry.heroku.com/cribhub-backend-prod/web
          heroku container:release web --app cribhub-backend-prod

      # Build Docker Image for Frontend
      - name: Build Frontend Docker Image for Production
        working-directory: frontend
        run: docker build -t registry.heroku.com/cribhub-frontend-prod/web .

      # Deploy Frontend to Heroku Production Environment
      - name: Deploy Frontend to Heroku Production Environment
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          docker push registry.heroku.com/cribhub-frontend-prod/web
          heroku container:release web --app cribhub-frontend-prod